services:
  postgres:
    build:
      context: .
      dockerfile: postgresbuild
    env_file:
      - .env
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init/postgres:/docker-entrypoint-initdb.d
      - ./parquet_fdw:/parquet_fdw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_DB}"]
      interval: 60s
      timeout: 5s
      retries: 2

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_ui
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "18081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy


  # duckdb:
  #   image: duckdb/duckdb:latest
  #   container_name: duckdb_cli
  #   volumes:
  #     - ./duckdb-data:/data
  #     - ./init/duckdb:/init
  #   command: ["duckdb", "-init", "/init/init.sql", "/data/dev.db"]
  #   stdin_open: true
  #   tty: true
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

volumes:
  pgdata:
  pgadmin_data:
